{"ts":1375575943793,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1375577249489,"patch":[[{"diffs":[[1,"(function() {\n   //Coord cache\n   var positions = {\n        hot: [{x: 0, y: 0}],\n        warm: [],\n        touched: []\n    };\n    \n    //Get the sum of the digits of any two numbers using their absolute value.\n    function getCoordinateSum(x, y) {\n        function sumOfDigits(aNumber) {\n            var ret = null;\n            var ints = (aNumber + '').split('');\n            ret = ints.reduce(function(curr, prev) {\n                return (+curr) + (+prev);\n            });\n            return ret;\n        }\n\n        function getAbsString(num) {\n            return '' + Math.abs(num);\n        }\n\n        function concatNums(num1, num2) {\n            return getAbsString(num1) + '' + getAbsString(num2);\n        }\n\n        return sumOfDigits(concatNums(x, y));\n    }\n    \n    //For a given set of coords, evaluate eligibility for movement\n    function handleCoord(coord) {\n        if (false === isPositionTouched(coord)) {\n            touchPosition(coord);\n            var canMove = getCoordinateSum(coord.x, coord.y) <= 19;\n            if(canMove) {\n                 positions.hot.push(coord);   \n            }\n        }\n    }\n    \n    //Look to the cells up, down, left and right and handle the coords\n    function lookAround(coord) {\n        handleCoord(coord.x+1, coord.y);\n        handleCoord(coord.x-1, coord.y);\n        handleCoord(coord.x, coord.y+1);\n        handleCoord(coord.x, coord.y-1);\n    }\n    \n    function isPositionTouched(coord) {\n        //Coord hasn't been seen if the x index hasn't been created or of the x/y postion has not been explicitly set true\n        return !positions.touched[coord.x] || true !== positions.touched[coord.x][coord.y];\n    }\n    \n    //mark a coord touched\n    function touchPosition(coord) {\n        positions.touched[coord.x] = positions.touched[coord.x] || [];\n        positions.touched[coord.x][coord.y] = true;\n    }\n    \n    //Pull all the hot coords out of the stack and return them as a deref'd array\n    function extractHot() {\n        var ret = positions.hot.slice(0, positions.hot.length);\n        return ret;\n    }\n\n    function evaluateHot() {\n        var hot = extractHot();\n        hot.forEach(function(coord) {\n           positions.warm.push(coord);\n           \n           touchPosition(coord);\n           \n           lookAround(coord);\n        });\n        \n    }\n\n    \n}());"]],"start1":0,"start2":0,"length1":0,"length2":2340}]],"length":2340,"saved":false}
{"ts":1375577437375,"patch":[[{"diffs":[[0,"     \n    }\n"],[1,"    \n    function getMonkeyMoveCount() {\n        while(positions.hot.length > 0) {\n            evaluateHot();\n        }\n        return positions.hot.length + positions.warm.length;\n    }\n    \n    console.log('Monkey can move the following spaces.');\n    console.log(getMonkeyMoveCount());"],[0,"\n    \n}());"]],"start1":2317,"start2":2317,"length1":23,"length2":311}]],"length":2628,"saved":false}
{"ts":1375577828873,"patch":[[{"diffs":[[0,"handleCoord("],[1,"{x: "],[0,"coord.x+1, c"]],"start1":1246,"start2":1246,"length1":24,"length2":28},{"diffs":[[0,"ord.x+1,"],[1," y:"],[0," coord.y"],[1," }"],[0,");\n     "]],"start1":1264,"start2":1264,"length1":24,"length2":29},{"diffs":[[0,"handleCoord("],[1,"{x: "],[0,"coord.x-1, c"]],"start1":1296,"start2":1296,"length1":24,"length2":28},{"diffs":[[0,"ord.x-1,"],[1," y:"],[0," coord.y"],[1," }"],[0,");\n     "]],"start1":1314,"start2":1314,"length1":24,"length2":29},{"diffs":[[0,"handleCoord("],[1,"{x: "],[0,"coord.x,"],[1," y:"],[0," coord.y+1);"]],"start1":1346,"start2":1346,"length1":32,"length2":39},{"diffs":[[0,"oord.y+1"],[1," }"],[0,");\n     "]],"start1":1375,"start2":1375,"length1":16,"length2":18},{"diffs":[[0,"leCoord("],[1,"{x: "],[0,"coord.x,"],[1," y:"],[0," coord.y"]],"start1":1400,"start2":1400,"length1":24,"length2":31},{"diffs":[[0,"oord.y-1"],[1," }"],[0,");\n    }"]],"start1":1425,"start2":1425,"length1":16,"length2":18}]],"length":2664,"saved":false}
{"ts":1375578027453,"patch":[[{"diffs":[[0,"ces.');\n    "],[1,"//"],[0,"console.log("]],"start1":2607,"start2":2607,"length1":24,"length2":26}]],"length":2666,"saved":false}
{"ts":1375578065090,"patch":[[{"diffs":[[0,";\n    }\n    "],[1,"debugger;"],[0,"\n    console"]],"start1":2544,"start2":2544,"length1":24,"length2":33}]],"length":2675,"saved":false}
{"ts":1375579258930,"patch":[[{"diffs":[[1,"//"],[0,"(function() {\n  "]],"start1":0,"start2":0,"length1":16,"length2":18},{"diffs":[[0,");\n    \n"],[1,"//"],[0,"}());"]],"start1":2664,"start2":2664,"length1":13,"length2":15}]],"length":2679,"saved":false}
{"ts":1375579504541,"patch":[[{"diffs":[[0," return "],[-1,"!"],[0,"position"]],"start1":1621,"start2":1621,"length1":17,"length2":16},{"diffs":[[0,".x] "],[-1,"||"],[1,"&&"],[0," true "],[-1,"!"],[1,"="],[0,"== p"]],"start1":1652,"start2":1652,"length1":17,"length2":17}]],"length":2678,"saved":false}
{"ts":1375579576528,"patch":[[{"diffs":[[0,"ns.hot.s"],[1,"p"],[0,"lice(0, "]],"start1":2048,"start2":2048,"length1":16,"length2":17}]],"length":2679,"saved":false}
{"ts":1375579639674,"patch":[[{"diffs":[[0,"    "],[-1,"debugger;"],[0,"\n   "]],"start1":2554,"start2":2554,"length1":17,"length2":8}]],"length":2670,"saved":false}
{"ts":1375579800228,"patch":[[{"diffs":[[0,"d.x] || "],[-1,"[]"],[1,"{}"],[0,";\n      "]],"start1":1838,"start2":1838,"length1":18,"length2":18}]],"length":2670,"saved":false}
{"ts":1375580579236,"patch":[[{"diffs":[[-1,"//"],[0,"(functio"]],"start1":0,"start2":0,"length1":10,"length2":8},{"diffs":[[0,"ouched: "],[-1,"[]"],[1,"{}"],[0,"\n    };\n"]],"start1":108,"start2":108,"length1":18,"length2":18},{"diffs":[[0,"e\n        return"],[1," (undefined !=="],[0," positions.touch"]],"start1":1610,"start2":1610,"length1":32,"length2":47},{"diffs":[[0,"coord.y]"],[1,")"],[0,";\n    }\n"]],"start1":1708,"start2":1708,"length1":16,"length2":17},{"diffs":[[0,"\n    }\n    \n"],[1,"    function handleWarm(coord) {\n         positions.warm.push(coord);\n         touchPosition(coord);\n         lookAround(coord);\n    }\n    \n"],[0,"    //Pull a"]],"start1":1915,"start2":1915,"length1":24,"length2":164},{"diffs":[[0,"ach("],[-1,"function(coord) {\n           positions.warm.push(coord);\n           \n           touchPosition(coord);\n           \n           lookAround(coord);\n        });\n        "],[1,"handleWarm);"],[0,"\n   "]],"start1":2346,"start2":2346,"length1":172,"length2":20},{"diffs":[[0,"    "],[-1,"console.log('Monkey can move the following spaces.');\n    //"],[1,"var solution = getMonkeyMoveCount();\n    if(window) {\n        window.monkeyMath = window.monkeyMath || Object.create(null);\n        window.monkeyMath.solution = solution;\n    }\n    \n    "],[0,"cons"]],"start1":2561,"start2":2561,"length1":68,"length2":194},{"diffs":[[0,"log("],[-1,"get"],[1,"'"],[0,"Monkey"],[-1,"MoveCount());\n    \n//"],[1," movement solution:');\n    console.log(solution);\n"],[0,"}())"]],"start1":2759,"start2":2759,"length1":38,"length2":65}]],"length":2825,"saved":false}
